/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package brailleantv2;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import java.awt.Image;
import javax.swing.ImageIcon;
import com.hopding.jrpicam.*;
import com.hopding.jrpicam.enums.Exposure;
import java.awt.Color;

/**
 *
 * @author pi
 */
public class CameraForm extends javax.swing.JFrame {

    /**
     * Creates new form CameraForm
     */
    private final TTS tts;
    private RPiCamera cam;

    private void init() {
        this.getContentPane().setBackground(Color.red);
        tts.speak("Camera Selected");
        setImage(Global.CAMERA_IMAGEBUFF_DIR);
        CameraSettings config = new CameraSettings(Global.CAMERA_CONFIG_DIR);
        try {
            cam = new RPiCamera(Global.BRAILLEANT_DIR);
            cam.setHeight(config.width);
            cam.setWidth(config.width);
            cam.setShutter(config.shutterSpeed);
            cam.setContrast(config.contrast);
            cam.setSaturation(config.saturation);
            cam.setBrightness(config.brightness);
            cam.setSharpness(config.sharpness);
            cam.setRotation(config.rotation);
            cam.setExposure(Exposure.VERYLONG);
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Failed to Initialize Camera");
        }
    }

    public CameraForm() {
        this.tts = new TTS();
        initComponents();
        init();
    }

    public CameraForm(TTS tts) {
        this.tts = tts;
        initComponents();
        init();
    }

    private void setImage(String dir) {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(dir));
        } catch (Exception e) {
            System.out.println(e);
        }
        //Image dimg=img.getScaledInstance(lbl_imgContainer.getWidth(), lbl_imgContainer.getHeight(), Image.SCALE_SMOOTH);
        lbl_imgContainer.setIcon(new ImageIcon(img.getScaledInstance(lbl_imgContainer.getWidth(), lbl_imgContainer.getHeight(), Image.SCALE_SMOOTH)));
    }

    private void setImage() {
        BufferedImage img = null;
        try {
            lbl_imgContainer.setIcon(new ImageIcon(cam.takeBufferedStill().getScaledInstance(lbl_imgContainer.getWidth(), lbl_imgContainer.getHeight(), Image.SCALE_SMOOTH)));
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        lbl_imgContainer = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btn_ocr = new javax.swing.JButton();
        btn_camSettings = new javax.swing.JButton();
        btn_preprocess = new javax.swing.JButton();
        btn_alib = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(480, 320));
        setMinimumSize(new java.awt.Dimension(480, 320));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(480, 320));
        setResizable(false);

        lbl_imgContainer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_imgContainer.setText("jLabel1");
        lbl_imgContainer.setMaximumSize(new java.awt.Dimension(280, 300));
        lbl_imgContainer.setMinimumSize(new java.awt.Dimension(280, 300));
        lbl_imgContainer.setOpaque(true);
        lbl_imgContainer.setPreferredSize(new java.awt.Dimension(280, 300));
        lbl_imgContainer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_imgContainerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_imgContainerMouseEntered(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/brailleantv2/back1.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_ocr.setBackground(java.awt.Color.white);
        btn_ocr.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_ocr.setText("OCR");
        btn_ocr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ocrMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ocrMouseEntered(evt);
            }
        });
        btn_ocr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ocrActionPerformed(evt);
            }
        });

        btn_camSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/brailleantv2/settings2.png"))); // NOI18N
        btn_camSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_camSettingsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_camSettingsMouseEntered(evt);
            }
        });

        btn_preprocess.setBackground(java.awt.Color.white);
        btn_preprocess.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_preprocess.setText("PRE-PROCESS IMAGE");
        btn_preprocess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_preprocessMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_preprocessMouseEntered(evt);
            }
        });
        btn_preprocess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preprocessActionPerformed(evt);
            }
        });

        btn_alib.setBackground(java.awt.Color.white);
        btn_alib.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btn_alib.setText("OCR(ALIBATA)");
        btn_alib.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_alibMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_alibMouseEntered(evt);
            }
        });
        btn_alib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alibActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_ocr, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_alib, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_camSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_preprocess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_imgContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(btn_preprocess, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_ocr, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(btn_alib, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_camSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_imgContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_imgContainerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imgContainerMouseClicked
        // TODO add your handling code here:
        tts.speak("Capturing Image");
        try {
            //cam.takeStill("imgbuff.jpg");
            Process captureProcess = Runtime.getRuntime().exec("/home/pi/Documents/Brailleant/capture.sh");
            captureProcess.waitFor();
            setImage(Global.CAMERA_IMAGEBUFF_DIR);
            tts.speak("Image Captured");
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Failed to capture Image");
        }
    }//GEN-LAST:event_lbl_imgContainerMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lbl_imgContainerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imgContainerMouseEntered
        // TODO add your handling code here:
        tts.speak("Capture Image");
    }//GEN-LAST:event_lbl_imgContainerMouseEntered

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        tts.speak("Main menu selected");
        new MainForm(this.tts).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        tts.speak("Main Menu");
    }//GEN-LAST:event_jButton1MouseEntered

    private void btn_ocrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ocrMouseClicked
        // TODO add your handling code here:
        tts.speak("Recognizing Image");
        try {
            Process OCRProcess = Runtime.getRuntime().exec("tesseract /home/pi/Documents/Brailleant/imgbuff.jpg /home/pi/Documents/Brailleant/out /home/pi/Documents/Brailleant/config");
            System.out.println("OCR started");
            OCRProcess.waitFor();
            System.out.println("OCR completed");
            java.util.Scanner sc = new java.util.Scanner(new File("/home/pi/Documents/Brailleant/out.txt"));
            while (sc.hasNext()) {
                System.out.println(sc.nextLine());
            }
            new EditForm(this.tts).setVisible(true);
            this.dispose();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_ocrMouseClicked

    private void btn_ocrMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ocrMouseEntered
        // TODO add your handling code here:
        tts.speak("Recognize Image");
    }//GEN-LAST:event_btn_ocrMouseEntered

    private void btn_camSettingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_camSettingsMouseEntered
        // TODO add your handling code here:
        tts.speak("Camera Settings");
    }//GEN-LAST:event_btn_camSettingsMouseEntered

    private void btn_camSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_camSettingsMouseClicked
        // TODO add your handling code here:
        new CameraSettingsForm(this.tts).setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_camSettingsMouseClicked

    private void btn_ocrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ocrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_ocrActionPerformed

    private void btn_preprocessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_preprocessMouseClicked
        // TODO add your handling code here:
        try {
            Process TextCleanerProcess = Runtime.getRuntime().exec("/home/pi/Documents/Brailleant/textcleaner /home/pi/Documents/Brailleant/imgbuff.jpg /home/pi/Documents/Brailleant/imgbuff.jpg");
            System.out.println("Process Started");
            TextCleanerProcess.waitFor();
            System.out.println("Process Completed");
            setImage("/home/pi/Documents/Brailleant/imgbuff.jpg");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_preprocessMouseClicked

    private void btn_preprocessMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_preprocessMouseEntered
        // TODO add your handling code here:
        tts.speak("Preprocess Image");
    }//GEN-LAST:event_btn_preprocessMouseEntered

    private void btn_alibMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alibMouseEntered
        // TODO add your handling code here:
        tts.speak("Recognize alibata");
    }//GEN-LAST:event_btn_alibMouseEntered

    private void btn_alibMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alibMouseClicked
        // TODO add your handling code here:
         tts.speak("Recognizing Image");
        try {
            Process OCRProcess = Runtime.getRuntime().exec("tesseract /home/pi/Documents/Brailleant/imgbuff.jpg /home/pi/Documents/Brailleant/alib -l FINALfinal /home/pi/Documents/Brailleant/config");
            System.out.println("OCR started");
            OCRProcess.waitFor();
            System.out.println("OCR completed");
            String str="";
            java.util.Scanner sc = new java.util.Scanner(new File("/home/pi/Documents/Brailleant/alib.txt"));
            while (sc.hasNext()) {
                String con=sc.nextLine();
                str=str.concat(con+"\n");
                System.out.println(con);
            }
            str=Global.fromAlibata2(str);
            java.io.File file=new File("/home/pi/Documents/Brailleant/out.txt");
            java.io.FileWriter wr=new java.io.FileWriter(file);
            wr.write(str);
            wr.close();
            new EditForm(this.tts).setVisible(true);
            this.dispose();
        } catch (Exception e) {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_btn_alibMouseClicked

    private void btn_preprocessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preprocessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_preprocessActionPerformed

    private void btn_alibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alibActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_alibActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CameraForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alib;
    private javax.swing.JButton btn_camSettings;
    private javax.swing.JButton btn_ocr;
    private javax.swing.JButton btn_preprocess;
    private javax.swing.JButton jButton1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lbl_imgContainer;
    // End of variables declaration//GEN-END:variables
}
